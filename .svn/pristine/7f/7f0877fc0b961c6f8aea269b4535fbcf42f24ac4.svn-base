/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cr.cdrb.web.edu.dao;

import cr.cdrb.commons.db.DbUtilsPlus;
import cr.cdrb.web.edu.daointerface.IUserdao;
import cr.cdrb.web.edu.security.domains.Role;
import cr.cdrb.web.edu.security.domains.EduUser;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.Resource;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Repository;

/**
 *
 * @author Jayang
 */
@Repository
public class UsersDao implements IUserdao {

    @Resource(name = "db3")
    private DbUtilsPlus db;

    public EduUser GetEduUser(String usernmae) throws SQLException {
        EduUser endUser = new EduUser();
        //检查数据是否已经存在
        String queryStr = "select S.EM_IDCARD as workername,U.IDCARD as username from EMPLOYEE S\n"
                + "join edu_users U on U.IDCARD=S.EM_IDCARD\n"
                + "where S.EM_IDCARD='" + usernmae + "'";
        EduUser quser = db.queryBean(EduUser.class, queryStr);
        if (quser == null) {
            usernmae = "users";//设置为默认访问用户
        } else //老职工表存在，新用户表不存在则向新用户表插入一条数据
        {
            if (quser.getWorkername() != null && quser.getUsername() == null) {
                String sqlInsert = "insert into edu_users values(edu_users_seq.nextval,'" + usernmae + "','21232f297a57a5a743894a0e4a801fc3')";
                db.insert(sqlInsert);
            }
        }
        String sqlStr = "select  c.u_id as companyId,c.system,d.dwxxbmbs as departmentId,U.IDCARD AS username,U.password,S1.rolename,S1.roleid,S1.rolecmt,Z.EM_NAME as workername,(case when Z.EM_EGENDER=1 THEN '男' else '女' end) as sex,c.name as company,Z.EM_POLITICALSTATUS as political,d.treename as department,Z.EM_GZ as post,Z.EM_ZC as title,Z.EM_JOBLEVEL as technicalgrade,Z.EM_GW as station from EDU_USERS U "
                + " left join EMPLOYEE  Z on Z.EM_IDCARD=U.IDCARD "
                + " left JOIN E_POSITION b on Z.EM_ID = b.EMPLOYEE_ID"
                + " left JOIN B_UNIT c on b.dw_id = c.u_id"
                + " left JOIN B_DEPARTMENT d on b.bm_id = d.dwxxbmbs"
                + " left join edu_user_roles  R on R.IDCARD=U.IDCARD "
                + " left join edu_roles S1 on S1.roleid=R.roleid where U.idcard='" + usernmae + "'  "
                + " union  "
                + " select c1.u_id as companyId,c1.system,d1.dwxxbmbs as departmentId,U1.IDCARD as username,U1.password,S.rolename,S.roleid,S.rolecmt,Z1.EM_NAME as workername,(case when Z1.EM_EGENDER=1 THEN '男' else '女' end) as sex,c1.name as company,Z1.EM_POLITICALSTATUS as political,d1.treename  as department,Z1.EM_GZ as post,Z1.EM_ZC as title,Z1.EM_JOBLEVEL as technicalgrade,Z1.EM_GW as station from edu_users U1 "
                + " left join EMPLOYEE  Z1 on Z1.EM_IDCARD=U1.idcard "
                + " left JOIN E_POSITION b1 on Z1.EM_ID = b1.EMPLOYEE_ID"
                + " left JOIN B_UNIT c1 on b1.dw_id = c1.u_id"
                + " left JOIN B_DEPARTMENT d1 on b1.bm_id = d1.dwxxbmbs"
                + " left join edu_group_members G on G.idcard=U1.idcard "
                + " left join edu_group_roles  R1 on R1.group_id=G.id "
                + " left join edu_roles S on S.roleid=R1.roleid  where U1.idcard='" + usernmae + "' ";
        List<EduUser> userList = db.queryBeanList(EduUser.class, sqlStr);
        if (userList.size() == 0) {
            throw new UsernameNotFoundException("未匹配到用户");
        }
        List<Role> roles = new ArrayList<Role>();
        boolean ismap = true;
        for (EduUser user : userList) {
            if (ismap) {
                endUser = user;
                ismap = false;
            }
            Role role = new Role();
            role.setRoleid(user.getRoleid());
            role.setRolename(user.getRolename());
            role.setRolecmt(user.getRolecmt());
            if (user.getRolename() != null) {
                roles.add(role);
            }
        }
        endUser.setRoles(roles);
        return endUser;
    }
}
