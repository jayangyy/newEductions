/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cr.cdrb.web.edu.services.IServices;

import cr.cdrb.web.edu.domains.easyui.DataModel;
import cr.cdrb.web.edu.domains.easyui.QueryModel;
import cr.cdrb.web.edu.domains.educlass.EduProf;
import cr.cdrb.web.edu.domains.eduplans.EduPlanSearch;
import cr.cdrb.web.edu.domains.eduplans.EduPlanTransfer;
import cr.cdrb.web.edu.domains.eduplans.EduPlans;
import cr.cdrb.web.edu.domains.eduplans.EduReviews;
import java.sql.SQLException;
import java.util.List;

/**
 *
 * @author Jayang
 *
 * 培训计划服务接口
 */
public interface IPlansService {
// <editor-fold desc="培训计划制定">

    /**
     *
     * @author Jayang 新增培训计划
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel addPlan(EduPlans plan) throws SQLException;

    /**
     *
     * @author Jayang 更细培训计划
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel updatePlan(EduPlans plan) throws SQLException;

    /**
     *
     * @author Jayang 获取培训计划分页
     * @param model 分页模型
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel getPlansPages(EduPlanSearch model) throws Throwable;

    /**
     *
     * @author Jayang 删除培训计划
     * @param ids 计划ID
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel removePlan(String ids) throws SQLException;

    /**
     *
     * @author Jayang 更细培训计划
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel overPlan(EduReviews review) throws SQLException;

    /**
     *
     * @author Jayang 更细培训计划
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel throwPlan(EduReviews review) throws SQLException;

    /**
     *
     * @author Jayang 获取培训计划
     * @param id 计划ID
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public EduPlans getPlan(String id) throws SQLException;

    /**
     *
     * @author Jayang 获取培训计划(包含主外键关系)
     * @param id 计划ID
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public EduPlans getPlanInclude(String id) throws SQLException;

    /**
     *
     * @author Jayang 获取培训计划列表
     * @param params
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public List<EduPlans> getPlans(Object... params) throws SQLException;

    // </editor-fold>
// <editor-fold desc="培训计划审批">
    /**
     *
     * @author Jayang 新增培训计划
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel addReview(EduReviews plan) throws SQLException;

    /**
     *
     * @author Jayang 处室移送
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel transOfficPlan(EduPlans plan) throws SQLException;

    /**
     *
     * @author Jayang 更细培训计划
     * @param plan 培训计划数据
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel updateReview(EduReviews plan) throws SQLException;

    /**
     *
     * @author Jayang 删除计划审批项
     * @param ids 审批ID号
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel removeReview(String ids) throws SQLException;

    /**
     *
     * @author Jayang 获取计划审批详细
     * @param pageModel 分页模型
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel getReviewPage(QueryModel pageModel) throws Throwable;

    /**
     *
     * @author Jayang 获取计划审批项
     * @param id 审批号
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public EduReviews getReview(String id) throws SQLException;

    /**
     *
     * @author Jayang 获取审核详细
     * @param params
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public List<EduReviews> getReviews(Object... params) throws SQLException;

    // </editor-fold>
    public List<EduProf> getProfs(Object... uids) throws SQLException;

    public DataModel getEmployeePage(QueryModel pageModel, String unit, String username) throws Throwable;

    public DataModel getTransPlanPage(EduPlanSearch pageModel) throws Throwable;

    /**
     *
     * @author Jayang 移送单位审核通过
     * @param review
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel authPassed(EduReviews review) throws SQLException;

    /**
     *
     * @author Jayang 移送单位再移送
     * @param review
     * @param transfers
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel authTransfer(List<EduReviews> review, List<EduPlanTransfer> transfers) throws SQLException;

    /**
     *
     * @author Jayang 回发拟稿人
     * @param review
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel authBacktop(EduReviews review) throws SQLException;

    /**
     *
     * @author Jayang 返上一级操作人
     * @param review
     * @param transfer
     * @return 执行结果
     * @throws java.sql.SQLException
     *
     */
    public DataModel authBackuser(EduReviews review, EduPlanTransfer transfer) throws SQLException;
}
