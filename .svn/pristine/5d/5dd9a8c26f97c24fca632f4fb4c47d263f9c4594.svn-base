/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cr.cdrb.web.edu.dao;

import cr.cdrb.commons.db.DbUtilsPlus;
import cr.cdrb.commons.db.builder.ISelectBuilder;
import cr.cdrb.commons.db.builder.OracleSelectBuilder;
import cr.cdrb.web.edu.model.Special_Job_Card;
import cr.cdrb.web.edu.model.Special_Job_Type;
import cr.cdrb.web.edu.security.domains.EduUser;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;
import org.springframework.stereotype.Component;

/**
 *
 * @author milord
 */
@Component
public class SpecialJobCardDao {
    @Resource(name = "db3")
    private DbUtilsPlus db;
    public Map<Integer, List<Special_Job_Card>> getSpecialJobCardPaging(int page, int rows, String sort, String order, String filterRules, String search,Object[] param) throws SQLException, Exception {
        ISelectBuilder builder = new OracleSelectBuilder()
                .from("select a.*,case when valid_end_date > sysdate then case when reviewdate<sysdate then 0 when reviewdate<add_months(sysdate,3) then 1 else 2 end else 0 end as status from edu_special_job_card a")
                .where(filterRules)
                .orderBy(sort + " " + order)
                .limit(page, rows);

        String totalSql = builder.total();
        String querySql = builder.toSql();
        Map<Integer, List<Special_Job_Card>> map = new HashMap<>();
        Integer total = Integer.parseInt(db.queryScalar(totalSql,param).toString());
        map.put(total, db.queryBeanList(Special_Job_Card.class, querySql,param));
        return map;
    }
    
    public Map<Boolean, String> insertSpecialJobCard(Special_Job_Card card) throws SQLException {
        Map<Boolean, String> resultMap = new HashMap<>();
        String sql = "select count(1) from edu_special_job_card where card_no=?";
        Integer count = Integer.parseInt(db.queryArray(sql,card.getCard_no())[0].toString());
        if(count<=0){
            sql = "insert into edu_special_job_card(card_no,cert_no,pid,name,sex,lbcode,zylb,xmcode,zcxm,firstdate,valid_begin_date,valid_end_date,reviewdate) values(?,?,?,?,?,?,?,?,?,to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'))";
            db.insert(sql,card.getCard_no(),card.getCert_no(),card.getPid(),card.getName(),card.getSex(),card.getLbcode(),card.getZylb(),card.getXmcode(),card.getZcxm(),card.getFirstdate(),card.getValid_begin_date(),card.getValid_end_date(),card.getReviewdate());
            resultMap.put(true, "保存成功！");
        }else{
            resultMap.put(false, "保存失败，该卡号[ "+card.getCard_no()+" ]数据已经存在！");
        }
        return resultMap;
    }
    
    public Map<Boolean, String> updateSpecialJobCard(Special_Job_Card card,String oldcardno) throws SQLException {
        Map<Boolean, String> resultMap = new HashMap<>();
        String sql = "select count(1) from edu_special_job_card where card_no=? and card_no<>?";
        Integer count = Integer.parseInt(db.queryArray(sql,card.getCard_no(),oldcardno)[0].toString());
        if(count<=0){
            sql = "update edu_special_job_card set card_no=?,cert_no=?,pid=?,name=?,sex=?,lbcode=?,zylb=?,xmcode=?,zcxm=?,firstdate=to_date(?,'yyyy-mm-dd'),valid_begin_date=to_date(?,'yyyy-mm-dd'),valid_end_date=to_date(?,'yyyy-mm-dd'),reviewdate=to_date(?,'yyyy-mm-dd') where card_no=?";
            db.update(sql,card.getCard_no(),card.getCert_no(),card.getPid(),card.getName(),card.getSex(),card.getLbcode(),card.getZylb(),card.getXmcode(),card.getZcxm(),card.getFirstdate(),card.getValid_begin_date(),card.getValid_end_date(),card.getReviewdate(),oldcardno);
            resultMap.put(true, "编辑成功！");
        }else{
            resultMap.put(false, "编辑失败，该卡号[ "+card.getCard_no()+" ]数据已经存在！");
        }
        return resultMap;
    }
    
    public Map<Boolean, String> deleteSpecialJobCard(String cardno) throws SQLException {
        Map<Boolean, String> resultMap = new HashMap<>();
        String sql = "delete from edu_special_job_card where card_no=?";
        db.update(sql, cardno);
        resultMap.put(true, "删除成功！");
        return resultMap;
    }
    
    public Special_Job_Card getSpecialJobCardByCardNo(String card_no) throws Exception {
        String sql = "select * from edu_special_job_card where card_no=?";
        Special_Job_Card card = db.queryBean(Special_Job_Card.class, sql, card_no);
        return card;
    }
    
    public List<Special_Job_Type> getSpecialJobType(String fcode) throws SQLException {
        String sql = "select code,name,parentcode from edu_special_job_type where parentcode=?";
        return db.queryBeanList(Special_Job_Type.class, sql, fcode);
    }
    
    public List<Special_Job_Type> getAllSpecialJobType() throws SQLException {
        String sql = "select code,name,parentcode from edu_special_job_type";
        return db.queryBeanList(Special_Job_Type.class, sql);
    }
    
    
    public Map<Boolean, String> insertSJCRevirewLog(String car_no,String reviewdate,String old_begin_date,String old_end_date,String new_begin_date,String new_end_date,String opttime,String optuid) throws SQLException {
        Map<Boolean, String> resultMap = new HashMap<>();
        String sql = "insert into edu_sjc_revirew_log(card_no,reviewdate,old_begin_date,old_end_date,new_begin_date,new_end_date,optdate,optuid) values(?,to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd'),to_date(?,'yyyy-mm-dd hh24:mi:ss'),?)";
        db.insert(sql,car_no,reviewdate,old_begin_date,old_end_date,new_begin_date,new_end_date,opttime,optuid);
        resultMap.put(true, "保存成功！");
        return resultMap;
    }
    
//    @Resource(name = "db3")
//    private DbUtilsPlus db3;
    public EduUser getUserInfoByPid(String pid) throws SQLException{
        String sql = "select U.IDCARD AS username,Z.EM_NAME as workername,(case when Z.EM_EGENDER=1 THEN '男' else '女' end) as sex from EDU_USERS U left join EMPLOYEE  Z on Z.EM_IDCARD=U.IDCARD where U.IDCARD=?";
        return db.queryBean(EduUser.class, sql,pid);
    }
}
